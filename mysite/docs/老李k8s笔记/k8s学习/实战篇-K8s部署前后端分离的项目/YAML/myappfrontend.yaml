apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config  
  namespace: myapp
data:
  default.conf: |
    upstream myapp.com{
      server myappbackend-service.myapp.svc.cluster.local:8899;
    }
    server{
      location / {
        root /usr/share/nginx/html;
        index  index.html index.htm;
        try_files $uri /index.html;
      }	
      location /apis/ {
        rewrite ^.+apis/?(.*)$ /$1 break;
        proxy_pass http://myapp.com;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: myappfrontend-service
  namespace: myapp
spec:  
  selector:
    app: myappfrontend
  ports:
    - port: 80
      targetPort: 80               # 1.暴露服务端口80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myappfrontend-dp
  namespace: myapp
  labels:
    app: myappfrontend
spec:
  selector:
    matchLabels:
      app: myappfrontend
  replicas: 1
  template:
    metadata:
      labels:
        app: myappfrontend
    spec:
      volumes:  
        - name: config-nginx           
          configMap:                    # 2.使用configMap
            name: nginx-config          
      containers:
        - name: container-myappfrontend
          image: myappfrontend          # 3.使用自定义镜像myappfrontend
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80         # 4.暴露后端容器端口80
          volumeMounts:
            - name: config-nginx
              mountPath: /etc/nginx/conf.d